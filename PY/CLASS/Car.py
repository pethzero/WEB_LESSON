class Car:
    def __init__(self, make, model, year, license_plate):
        self.make = make
        self.model = model
        self.year = year
        self.license_plate = license_plate

    def display_info(self):
        logo = self.get_logo()  # ‡∏î‡∏∂‡∏á‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏Ç‡∏≠‡∏á‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏£‡∏ñ
        print(f"Make: {logo}, Model: {self.model}, Year: {self.year}, License Plate: {self.license_plate}")

    def get_logo(self):
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏£‡∏ñ
        logos = {
            "Toyota": "üöó",  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ä‡πâ Emoji ‡πÅ‡∏ó‡∏ô‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏à‡∏£‡∏¥‡∏á
            "Honda": "üöô",
            "Ford": "üöï",
            "BMW": "üöò"
        }
        # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏î‡∏¥‡∏Å‡∏ä‡∏±‡∏ô‡∏ô‡∏≤‡∏£‡∏µ‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠
        return logos.get(self.make, self.make)


class Garage:
    def __init__(self):
        self.cars = []  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ

    def add_car(self, car):
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
        self.cars.append(car)
        print(f"Added {car.make} {car.model} to the garage.")

    def find_car_by_license_plate(self, license_plate):
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏ñ‡πÇ‡∏î‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        for car in self.cars:
            if car.license_plate == license_plate:
                return car
        return None

    def list_cars(self):
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏£‡∏ñ
        if not self.cars:
            print("No cars in the garage.")
        else:
            for car in self.cars:
                car.display_info()


# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Car ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
car1 = Car("Toyota", "Corolla", 2020, "AB1234")
car2 = Car("Honda", "Civic", 2021, "XY5678")
car3 = Car("Ford", "Mustang", 2019, "MN6789")
car4 = Car("BMW", "X5", 2022, "CD9876")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ Garage
garage = Garage()

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏£‡∏ñ
garage.add_car(car1)
garage.add_car(car2)
garage.add_car(car3)
garage.add_car(car4)

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏ñ‡πÇ‡∏î‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
found_car = garage.find_car_by_license_plate("XY5678")
if found_car:
    print("\nFound Car:")
    found_car.display_info()
else:
    print("\nCar not found.")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏£‡∏ñ
print("\nList of cars in the garage:")
garage.list_cars()
