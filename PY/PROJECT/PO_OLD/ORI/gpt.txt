แน่นอน! ผมจะสร้างตัวอย่าง SQL สำหรับฐานข้อมูลสินค้า ลูกค้า คำสั่งซื้อ และการชำระเงิน พร้อมกับสคริปต์ `run.bat` สำหรับการป้อนข้อมูลในระบบจำลอง

### 1. SQL Schema Creation

**1.1. ตารางสำหรับสินค้า (Product)**
```sql
CREATE TABLE Products (
    product_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2),
    stock_quantity INT,
    category VARCHAR(50),
    supplier VARCHAR(100)
);
```

**1.2. ตารางสำหรับลูกค้า (Customer)**
```sql
CREATE TABLE Customers (
    customer_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    contact_number VARCHAR(20),
    email VARCHAR(100),
    address TEXT,
    registration_date DATE
);
```

**1.3. ตารางสำหรับคำสั่งซื้อ (PurchaseOrder)**
```sql
CREATE TABLE PurchaseOrders (
    order_id VARCHAR(50) PRIMARY KEY,
    customer_id VARCHAR(50),
    order_date DATE,
    delivery_date DATE,
    total_amount DECIMAL(10, 2),
    status VARCHAR(20),
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);
```

**1.4. ตารางสำหรับรายการคำสั่งซื้อ (OrderItems)**
```sql
CREATE TABLE OrderItems (
    item_id INT IDENTITY(1,1) PRIMARY KEY,
    order_id VARCHAR(50),
    product_id VARCHAR(50),
    quantity INT,
    unit_price DECIMAL(10, 2),
    total_price DECIMAL(10, 2),
    FOREIGN KEY (order_id) REFERENCES PurchaseOrders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);
```

**1.5. ตารางสำหรับการชำระเงิน (Payment)**
```sql
CREATE TABLE Payments (
    payment_id VARCHAR(50) PRIMARY KEY,
    order_id VARCHAR(50),
    payment_date DATE,
    amount DECIMAL(10, 2),
    payment_method VARCHAR(50),
    FOREIGN KEY (order_id) REFERENCES PurchaseOrders(order_id)
);
```

### 2. Sample Data Insertion

**2.1. ป้อนข้อมูลสินค้า**
```sql
INSERT INTO Products (product_id, name, description, price, stock_quantity, category, supplier)
VALUES 
('P001', 'Laptop', '15-inch laptop with 8GB RAM', 1200.00, 30, 'Electronics', 'Tech Supplier Inc.'),
('P002', 'Smartphone', 'Latest smartphone with 128GB storage', 800.00, 50, 'Electronics', 'Gadget Co.');
```

**2.2. ป้อนข้อมูลลูกค้า**
```sql
INSERT INTO Customers (customer_id, name, contact_number, email, address, registration_date)
VALUES 
('C001', 'Alice Johnson', '+1-555-6789', 'alice.johnson@example.com', '789 Maple Street, Anytown, TX', '2023-01-15'),
('C002', 'Bob Smith', '+1-555-2345', 'bob.smith@example.com', '456 Oak Avenue, Big City, CA', '2023-03-22');
```

**2.3. ป้อนข้อมูลคำสั่งซื้อ**
```sql
INSERT INTO PurchaseOrders (order_id, customer_id, order_date, delivery_date, total_amount, status)
VALUES 
('O001', 'C001', '2024-09-01', '2024-09-05', 2000.00, 'Processing');
```

**2.4. ป้อนข้อมูลรายการคำสั่งซื้อ**
```sql
INSERT INTO OrderItems (order_id, product_id, quantity, unit_price, total_price)
VALUES 
('O001', 'P001', 1, 1200.00, 1200.00),
('O001', 'P002', 1, 800.00, 800.00);
```

**2.5. ป้อนข้อมูลการชำระเงิน**
```sql
INSERT INTO Payments (payment_id, order_id, payment_date, amount, payment_method)
VALUES 
('P001', 'O001', '2024-09-01', 2000.00, 'Credit Card');
```

### 3. Batch File: `run.bat`

สำหรับการรันสคริปต์ SQL และป้อนข้อมูล คุณสามารถใช้ batch file (`run.bat`) ดังนี้:

```bat
@echo off
setlocal

:: Define database connection parameters
set DB_SERVER=your_server_name
set DB_NAME=your_database_name
set DB_USER=your_username
set DB_PASSWORD=your_password

:: Path to the SQL file
set SQL_FILE=create_and_populate_db.sql

:: Execute the SQL file using sqlcmd
sqlcmd -S %DB_SERVER% -d %DB_NAME% -U %DB_USER% -P %DB_PASSWORD% -i %SQL_FILE%

:: End script
endlocal
```

### 4. สร้างไฟล์ SQL ที่ใช้สำหรับ `run.bat`

**4.1. `create_and_populate_db.sql`**

รวมคำสั่ง SQL สำหรับการสร้างตารางและป้อนข้อมูลลงในไฟล์นี้:

```sql
-- Drop existing tables if they exist
IF OBJECT_ID('Products', 'U') IS NOT NULL DROP TABLE Products;
IF OBJECT_ID('Customers', 'U') IS NOT NULL DROP TABLE Customers;
IF OBJECT_ID('PurchaseOrders', 'U') IS NOT NULL DROP TABLE PurchaseOrders;
IF OBJECT_ID('OrderItems', 'U') IS NOT NULL DROP TABLE OrderItems;
IF OBJECT_ID('Payments', 'U') IS NOT NULL DROP TABLE Payments;

-- Create tables
CREATE TABLE Products (
    product_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2),
    stock_quantity INT,
    category VARCHAR(50),
    supplier VARCHAR(100)
);

CREATE TABLE Customers (
    customer_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    contact_number VARCHAR(20),
    email VARCHAR(100),
    address TEXT,
    registration_date DATE
);

CREATE TABLE PurchaseOrders (
    order_id VARCHAR(50) PRIMARY KEY,
    customer_id VARCHAR(50),
    order_date DATE,
    delivery_date DATE,
    total_amount DECIMAL(10, 2),
    status VARCHAR(20),
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);

CREATE TABLE OrderItems (
    item_id INT IDENTITY(1,1) PRIMARY KEY,
    order_id VARCHAR(50),
    product_id VARCHAR(50),
    quantity INT,
    unit_price DECIMAL(10, 2),
    total_price DECIMAL(10, 2),
    FOREIGN KEY (order_id) REFERENCES PurchaseOrders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);

CREATE TABLE Payments (
    payment_id VARCHAR(50) PRIMARY KEY,
    order_id VARCHAR(50),
    payment_date DATE,
    amount DECIMAL(10, 2),
    payment_method VARCHAR(50),
    FOREIGN KEY (order_id) REFERENCES PurchaseOrders(order_id)
);

-- Insert data
INSERT INTO Products (product_id, name, description, price, stock_quantity, category, supplier)
VALUES 
('P001', 'Laptop', '15-inch laptop with 8GB RAM', 1200.00, 30, 'Electronics', 'Tech Supplier Inc.'),
('P002', 'Smartphone', 'Latest smartphone with 128GB storage', 800.00, 50, 'Electronics', 'Gadget Co.');

INSERT INTO Customers (customer_id, name, contact_number, email, address, registration_date)
VALUES 
('C001', 'Alice Johnson', '+1-555-6789', 'alice.johnson@example.com', '789 Maple Street, Anytown, TX', '2023-01-15'),
('C002', 'Bob Smith', '+1-555-2345', 'bob.smith@example.com', '456 Oak Avenue, Big City, CA', '2023-03-22');

INSERT INTO PurchaseOrders (order_id, customer_id, order_date, delivery_date, total_amount, status)
VALUES 
('O001', 'C001', '2024-09-01', '2024-09-05', 2000.00, 'Processing');

INSERT INTO OrderItems (order_id, product_id, quantity, unit_price, total_price)
VALUES 
('O001', 'P001', 1, 1200.00, 1200.00),
('O001', 'P002', 1, 800.00, 800.00);

INSERT INTO Payments (payment_id, order_id, payment_date, amount, payment_method)
VALUES 
('P001', 'O001', '2024-09-01', 2000.00, 'Credit Card');
```

**หมายเหตุ:**
- เปลี่ยนค่า `your_server_name`, `your_database_name`, `your_username`, และ `your_password` เป็นค่าที่เหมาะสมกับการเชื่อมต่อฐานข้อมูลของคุณ
- ตรวจสอบให้แน่ใจว่า `sqlcmd` ติดตั้งและตั้งค่า PATH อย่างถูกต้อง

ด้วยวิธีนี้ คุณจะสามารถจัดการกับข้อมูลในระบบฐานข้อมูลของคุณได้อย่างมีประสิทธิภาพ!